version: '3'

networks:
  internal:

services:

  nginx:
    image: nginx
    container_name: ${APP_NAME}-nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - internal


  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: ${APP_NAME}-mysql
    restart: always
    tty: true
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_NAME: ${MYSQL_SERVICE_NAME}
    expose:
      - "3306"
    networks:
      - internal


  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-app
    volumes:
      - ./:/var/www/html
      - ./docker/supervisord/queue-worker.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./docker/php-ini/php.ini:/usr/local/etc/php/conf.d/php.ini
    expose:
      - "9000"
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - internal


  redis:
    image: redis
    container_name: ${APP_NAME}-redis
    command: redis-server --requirepass redis --appendonly yes
    volumes:
      - ./docker/redis_data:/data
    expose:
      - "6379"
    networks:
      - internal

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}-phpmyadmin
    restart: always
    ports:
      - '${PMA_PORT}:80'
    environment:
      PMA_HOST: mysql
      UPLOAD_LIMIT: 300M
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - internal
